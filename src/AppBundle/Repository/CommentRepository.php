<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Comment;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Mapping;

/**
 * CommentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentRepository extends \Doctrine\ORM\EntityRepository
{
    public function __construct(EntityManager $em, Mapping\ClassMetadata $metadata = null)
    {
        parent::__construct($em, $metadata == null ? new Mapping\ClassMetadata(Comment::class) : $metadata);
    }

    public function commentAndUsers($imageId){

        /**
        $this->db->select('c.comment_text, u.username, c.image_id, c.comment_id');
        $this->db->from('Comments as c');
        $this->db->join('Users as u', 'c.user_id = u.id');
        $this->db->order_by('c.comment_id', 'DESC');
        $this->db->where(['c.image_id' => $image_id]);
        return $this->db->get()->result_array();
         **/

        $db = $this->getEntityManager()->getConnection();
        $qb = $db->createQueryBuilder();

        $qb->select('c.comment_text,u.username,c.image_id,c.id')->from('comment', 'c')
            ->Join('c','users','u','c.user_id = u.id')
            ->addOrderBy('c.id','DESC')
            ->where('c.image_id = :id')->setParameter('id',$imageId);

        return $qb->execute();

    }

    public function userCommentsCount($userId){

        /**
        $this->db->select('id')
            ->from('comments')
            ->where('user_id', $user['id'])
            ->count_all_results();
         * */

        $db = $this->getEntityManager()->getConnection();
        $qb = $db->createQueryBuilder();

        $qb->select('count(id) as commentsCount')->from('comment')->where('id = :id')->setParameter('id',$userId);

        return $result = $qb->execute();
    }

    public function deleteComment($commentId){

        $db = $this->getEntityManager()->getConnection();
        $qb = $db->createQueryBuilder();

        $qb->delete('comment')->where('id = :id')->setParameter('id',$commentId);

        return $result = $qb->execute();
    }

    public function deleteComments($imageId){


        $db = $this->getEntityManager()->getConnection();
        $qb = $db->createQueryBuilder();

        $qb->delete('comment')->where('image_id = :id')->setParameter('id',$imageId);

        return $result = $qb->execute();
    }

}
